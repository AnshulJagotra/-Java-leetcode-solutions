class Solution {
    public void sortColors(int[] nums) {
        for (int i=0;i<nums.length;i++){
            for(int j=1;j<nums.length-i;j++){
                if(nums[j] < nums [j-1]){
                    int temp = nums [j];
                    nums [j] = nums [j-1];
                    nums [j-1]=  temp;
                }
            }
        }
    }
}



// optimal approch with TC O(n)
class Solution {
    public void sortColors(int[] nums) {
        int low =0;
        int mid=0;
        int high=nums.length-1;
        while(mid<=high){
            if(nums[mid] == 0){
                swap(nums,mid,low);
                low++;
                mid++;
            }else if(nums[mid]==1){
                    mid++;
                }else{
                    swap(nums,mid,high);
                    high--;
            }
        }
    } 
    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;  
}
}
