class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        // Map to store the next greater element for each number in nums2
        HashMap<Integer, Integer> nextGreaterMap = new HashMap<>();
        Stack<Integer> stack = new Stack<>();

        // Traverse nums2 from right to left to find next greater elements
        for (int i = nums2.length - 1; i >= 0; i--) {
            // Pop elements from stack that are less than or equal to the current element
            while (!stack.isEmpty() && stack.peek() <= nums2[i]) {
                stack.pop();
            }

            // The next greater element for nums2[i] is the top element of the stack, if it exists
            if (!stack.isEmpty()) {
                nextGreaterMap.put(nums2[i], stack.peek());
            } else {
                nextGreaterMap.put(nums2[i], -1);
            }

            // Push the current element onto the stack
            stack.push(nums2[i]);
        }

        // Build the result array for nums1 based on the next greater elements found in nums2
        int[] result = new int[nums1.length];
        for (int i = 0; i < nums1.length; i++) {
            result[i] = nextGreaterMap.get(nums1[i]);
        }

        return result;
    }
}
